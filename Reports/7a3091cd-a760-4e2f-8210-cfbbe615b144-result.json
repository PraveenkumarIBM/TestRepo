{"name": "test_TC02_upload_invoices_pdf[chrome]", "status": "failed", "statusDetails": {"message": "AssertionError: \nExpected: 'File upload successful'\n     but: was 'File upload successful\\nDone'", "trace": "self = <Sanity.test_TC01_VerifyDocumentSizeLessthan5MB.Test_VerifyDocumentUploadFunctionality object at 0x00000154D304BA00>\n\n    def test_TC02_upload_invoices_pdf(self):\n         #Login verification\n         loginpage=LoginpageVerification(self.driver)\n         loginpage.test_loginpage_verification()\n         #Upload document verification.\n         uploaddocument = Upload_Document_Functionality(self.driver)\n>        uploaddocument.test_uploadinvoices_lessthan5mb()\n\ntestCases\\CI\\Sanity\\test_TC01_VerifyDocumentSizeLessthan5MB.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Functions.FileUpload.Upload_Document_Functionality object at 0x00000154C3AE0DC0>\n\n    @allure.suite('Upload Functionality')\n    def test_uploadinvoices_lessthan5mb(self):\n        upload=Upload_Document_NewUI(self.driver)\n        upload.upload_document_newUI()\n        time.sleep(3)\n        self.driver.execute_script(\"document.body.style.zoom='100%'\")\n        time.sleep(2)\n        allure.attach(self.driver.get_screenshot_as_png(), name=\"UploadDocumentScreen\", attachment_type=AttachmentType.PNG)\n        browse = self.driver.find_element(By.XPATH, \"//span[contains(text(),'Drop file here or click to upload')]\")\n        browse.click()\n        time.sleep(2)\n        file_path = Sheet['K2'].value\n        time.sleep(3)\n        keyboard = Controller()\n        keyboard.type(file_path)\n        keyboard.press(Key.enter)\n        time.sleep(2)\n        keyboard.release(Key.enter)\n        time.sleep(4)\n        allure.attach(self.driver.get_screenshot_as_png(), name=\"FileUploaded\", attachment_type=AttachmentType.PNG)\n        action = ActionChains(self.driver)\n        movelement=self.driver.find_element(By.XPATH, '//div[contains(text(),\"File upload successful\")]')\n        action.move_to_element(movelement).perform()\n        time.sleep(2)\n        text=self.driver.find_element(By.XPATH,'//div[contains(text(),\"File upload successful\")]').text\n        time.sleep(1)\n>       assert_that(text,equal_to('File upload successful'))\nE       AssertionError: \nE       Expected: 'File upload successful'\nE            but: was 'File upload successful\\nDone'\n\nFunctions\\FileUpload.py:49: AssertionError"}, "attachments": [{"name": "Dashboard Page", "source": "ee15723d-c62e-41cb-b898-716ee8945f9e-attachment.png", "type": "image/png"}, {"name": "UploadDocumentScreen", "source": "88e385ea-f441-4554-9fc2-d769375aa1f5-attachment.png", "type": "image/png"}, {"name": "FileUploaded", "source": "e899d37d-ec40-45ac-b48a-ef700a023e5c-attachment.png", "type": "image/png"}, {"name": "log", "source": "97a39181-31e9-4d60-92aa-eeccdf000e68-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "init_driver", "value": "'chrome'"}], "start": 1713962139648, "stop": 1713962165178, "uuid": "dc3aa2b0-e2db-49e1-9f3d-5d493f76a7cc", "historyId": "232a091ebe474e57ad0c98f5c4952383", "testCaseId": "e44517837ed6ba5249c240a03fdd7f70", "fullName": "testCases.CI.Sanity.test_TC01_VerifyDocumentSizeLessthan5MB.Test_VerifyDocumentUploadFunctionality#test_TC02_upload_invoices_pdf", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "testCases.CI.Sanity"}, {"name": "suite", "value": "test_TC01_VerifyDocumentSizeLessthan5MB"}, {"name": "subSuite", "value": "Test_VerifyDocumentUploadFunctionality"}, {"name": "host", "value": "IBM-PF33GXH6"}, {"name": "thread", "value": "18300-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.CI.Sanity.test_TC01_VerifyDocumentSizeLessthan5MB"}]}